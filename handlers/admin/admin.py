from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery

from kb import admin_panel, build_delete_keyboard
from database import get_statistics, delete_product
from core.config import ADMIN_ID

router = Router()


@router.message(Command('admin'))
async def admin_handler(message: Message):
    if message.from_user.id in ADMIN_ID:
        await message.answer('<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –±–æ—Ç–∞</b>\n\n–í—ã–±–µ—Ä–µ—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ',
                             reply_markup=admin_panel)


@router.callback_query(F.data == 'statistics')
async def statistics_handler(callback: CallbackQuery):
    await callback.answer()
    if not await get_statistics():
        await callback.message.answer('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É—Å—Ç–∞. –ü–æ–∫–∞ –Ω–∏ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä –Ω–µ –±—ã–ª –ø—Ä–æ–¥–∞–Ω')
        return

    text = '<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ —Ç–æ–≤–∞—Ä–æ–≤:</b>\n\n'
    for name, count in await get_statistics():
        text += f"<b>{name}</b>: {count} —Ä–∞–∑(–∞)\n"
    await callback.message.answer(text)


@router.callback_query(F.data == 'delete_product')
async def delete_keyboard(callback: CallbackQuery):
    await callback.answer()
    keyboard = await build_delete_keyboard()

    if not keyboard.inline_keyboard:
        await callback.message.edit_text("üì≠ –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        return

    await callback.message.edit_text("üóë –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", reply_markup=keyboard)


@router.callback_query(F.data.startswith("delete_"))
async def process_delete_product(callback: CallbackQuery):
    await callback.answer()
    product_id = int(callback.data.split("_")[1])
    await delete_product(product_id)
    await callback.message.answer("–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω")
    await callback.message.edit_reply_markup(reply_markup=await build_delete_keyboard())
