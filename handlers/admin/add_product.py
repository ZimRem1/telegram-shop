# handlers/admin/add_product.py

from aiogram import F, Router
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from core.states.states import ProductCreation
from kb import product_confirm_kb, abort_creation
from database import add_product


router = Router()

@router.callback_query(F.data == 'add_product')
async def add_short_name_product(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(ProductCreation.short_name)
    await callback.message.edit_text(
        '<b>–í–∞–º –±—É–¥—É—Ç –∑–∞–¥–∞–Ω—ã 5 –≤–æ–ø—Ä–æ—Å–æ–≤:</b>\n\n'
        '1. –ö–æ—Ä–æ—Ç–∫–æ–µ –∏–º—è —Ç–æ–≤–∞—Ä–∞ (–ø—Ä–∏–º–µ—Ä - Spotify)\n'
        '2. –ü–æ–ª–Ω–æ–µ –∏–º—è —Ç–æ–≤–∞—Ä–∞ (–ø—Ä–∏–º–µ—Ä - üé¨ Netflix Premium ‚Äì 30 –¥–Ω–µ–π)\n'
        '3. –û–ø–∏—Å–∞–Ω–∏–µ\n'
        '4. –ö–∞—Ä—Ç–∏–Ω–∫–∞\n'
        '5. –¶–µ–Ω—É\n\n'
        '1/5 –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ (–æ–Ω–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö)',
        reply_markup=abort_creation)

@router.message(ProductCreation.short_name)
async def add_product_name(message: Message, state: FSMContext):
    await state.update_data(short_name=message.text)
    await state.set_state(ProductCreation.name)
    await message.answer('2/5 –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞\n\n–ü—Ä–∏–º–µ—Ä: üé¨ Netflix Premium ‚Äì 30 –¥–Ω–µ–π',
                         reply_markup=abort_creation)

@router.message(ProductCreation.name)
async def add_product_description(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(ProductCreation.description)
    await message.answer('3/5 –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞', reply_markup=abort_creation)

@router.message(ProductCreation.description)
async def add_product_photo(message: Message, state: FSMContext):
    await state.update_data(description=message.text)
    await state.set_state(ProductCreation.photo)
    await message.answer('4/5 –°–∫–∏–Ω—å—Ç–µ —Ñ–æ—Ç–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ 16:9 –¥–ª—è —Ç–æ–≤–∞—Ä–∞', reply_markup=abort_creation)

@router.message(ProductCreation.photo, F.photo)
async def add_product_price(message: Message, state: FSMContext):
    file_id = message.photo[-1].file_id
    await state.update_data(photo=file_id)
    await state.set_state(ProductCreation.price)
    await message.answer('5/5 –°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä? (–Ω–∞–ø–∏—à–∏—Ç–µ <b>—Ç–æ–ª—å–∫–æ</b> —á–∏—Å–ª–æ)', reply_markup=abort_creation)

@router.message(ProductCreation.price)
async def product_example(message: Message, state: FSMContext):
    await state.update_data(price=message.text)
    data = await state.get_data()
    await message.answer('–ö–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞:')
    await message.answer_photo(
        data['photo'],
        f"<b>{data['name']}</b>\n\n{data['description']}\n\n–¶–µ–Ω–∞: {data['price']} ‚ÇΩ",
        reply_markup=product_confirm_kb)

@router.callback_query(F.data == 'confirm_product')
async def confirm_product(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    await state.clear()
    await add_product(data['short_name'], data['name'], data['description'], data['photo'], data['price'])
    await callback.message.delete()
    await callback.message.answer("‚úîÔ∏è –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
    await callback.answer()

@router.callback_query(F.data == 'cancel_product')
async def cancel_product(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.delete()
    await callback.message.answer("‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    await callback.answer()
